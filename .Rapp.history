install.pakages ("tidyverse")
install.packages ("tidyverse")
library (tidyverse)
mpg
ggplot(data = <DATA>) + <GEOM_FUNCTION> (mapping = aes (<mappings>))
ggplot(data = <DATA>) + <GEOM_FUNCTION> (mapping = aes (<MAPPINGS>))
ggplot (data = <DATA>) + <GEOM_FUNCTION> (mapping = aes (<MAPPINGS>))
ggplot (data = mpg)
ggplot(data=<DATA>)+<GEOM_FUNCTION>(mapping=aes(<MAPPINGS>))
ggplot (data = DATA) + <GEOM_FUNCTION> (mapping=aes (<MAPPINGS>))
ggplot (data = DATA) + GEOM_FUNCTION (mapping=aes (<MAPPINGS>))
ggplot (data = DATA) + GEOM_FUNCTION (mapping=aes (MAPPINGS))
ggplot (data = <DATA>) + <GEOM_FUNCTION> (mapping=aes (<MAPPINGS>))
ggplot (data = mpg) + geom_point (mapping = aes (X = displ, y = hwy))
ggplot (data = mpg)
ggplot (data = mpg) + geom_pont (mapping = aes (x = displ, y = hwy, color = class))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, color = class))
ggplot (data = mpg) + gom_point (mapping = aes (x = displ, y = hwy. alpha = class))
ggplot (data = mpg) + gom_point (mapping = aes (x = displ, y = hwy, alpha = class))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, alpha = class))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, shape = class))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, stroke))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy)) + facet_wrap (~ class, nrow = 2)
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, alpha = class))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy)) + facet_wrap (~ class, nrow = 2)
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy)) + facet_grid (drv ~ cyl)
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, stroke))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy)) + facet_grid (drv ~ .)
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, stroke 3))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, stroke = 3))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, stroke = 1))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, stroke = 5))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy)) + facet_grid (. ~ cyl)
ggplot (data = mpg) + geom_smooth (mapping = aes (x = displ, y = hwy))
gplot (data = mpg) + geom_smooth (mapping = aes (x = displ, y = hwy, linetype = drv))
ggplot (data = mpg) + geom_smooth (mapping = aes (x = displ, y = hwy, linetype = drv))
ggplot (data = mpg) + geom_smooth (mapping = aes (x = displ, y = hwy, color = drv), show.legend = FALSE)
ggplot (data = mpg) + geom_smooth (mapping = aes (x = displ, y = hwy)) + geom_point (mapping = aes (class = color)) + geom_smooth ()
ggplot (data = mpg) + geom_smooth (mapping = aes (x = displ, y = hwy)) + geom_point (mapping = aes (color = class) + geom_smooth ()
geom_abline()
ggplot (data = mpg, mapping = aes (x = displ), y = hwy)) + geom_smooth ()
ggplot (data = mpg, mapping = aes (x = displ, y = hwy)) + geom_smooth ()
ggplot (data = mpg, mapping = aes (x = cty, y = hwy)) + geom_smooth () geom_point () + geom_abline () + coord_fixed ()
ggplot (data = mpg, mapping = aes (x = cty, y = hwy)) + geom_point () + geom_abline () + coord_fixed ()
library (tidyverse)
ggplot (data = mpg, mapping = aes (x = cty, y = hwy)) + geom_point () + geom_abline () + coord_fixed ()
ggplot (data = diomonds) + geom_bar (mapping = aes (x = cut))
ggplot (data = diamonds) + geom_bar (mapping = aes (x = cut))
ggplot (data = diamonds) + stat_sumary (mapping = aes (x = cut, y = depth), fun.ymin = min, fun.ymak = max, fun.y = median)
ggplot (data = diamonds) + stat_sumary (mapping = aes (x = cut, y = depth), fun.ymin = min, fun.ymax = max, fun.y = median)
ggplot (data = diamonds) + geom_bar (mapping + aes(x = cut, y = ..prop.., group = 1))
ggplot (data = mpg)
ggplot (data = mpg) + geom_points (mapping = aes(x = displ, y = hwy, color = class))
ggplot (data = mpg) + geom_points (mapping = aes (x = displ, y = hwy, color = class))
ggplot (data = mpg) + geom_point (mapping = aes (x = displ, y = hwy, color = class))
ggplot (data = mpg, mapping = aes (x = cty, y = hwy)) + geom_point () + geom_abline () + coord_fixed ()
ggplot (data = diamonds) + geom_bar (mapping = aes (x = cut))
ggplot (data = diamonds) + stat_summary (mapping = aes (x = cut, y = depth), fun.ymin = min, fun.ymax = max, fun.y = median)
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, y = ..prop.., group = 1))
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, color = cut))
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, fill = cut))
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, fill = clarity))
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, fill = clarity)), position = "fill"
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, fill = clarity), position = "fill")
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, fill = clarity), position = "dodge")
coord_flip()
ggplot (data = mpg, mapping = aes (x = class, y = hwy)) + geom_boxplot()
ggplot (data = mpg, mapping = aes (x = class, y = hwy)) + geom_boxplot() + coord_flip()
bar <- ggplot (data = diamonds) + geom_bar (mapping = aes (x = cut, fill = cut,), show.legend = FALSE, width = 1) = theme (aspect.ratio = 1) + labs (x = NULL, y = NULL)
ggplot (data = mpg, mapping = aes (x = class, y = hwy)) + geom_boxplot()
getwd ()
setwd ()
setwd ("C:/CS453?R-Exercise")
setwd ("C:/CS453/R-Exercise")
setwd (/User/rendutczak/desktop/CS 453/R-Exercise)
setwd (C: /User/rendutczak/desktop/CS 453/R-Exercise)
setwd ("C:/User/rendutczak/desktop/CS 453/R-Exercise")
etwd ("C:/User/rendutczak/desktop/CS 453")
setwd ("C:/User/rendutczak/desktop/CS 453")
#main function read.table ()
getwd ()
setwd ("C:/User/rendutczak/Desktop/CS 453")
#main functionread.table ()
fm = read.csv("Heights.csv")
setwd ("C:/Users/rendutczak/Desktop/CS 453")
setwd ("C:/Users/rendutczak)
#main function read.table ()
fm = read.csv ("Heights.csv")
my_data = read.csv ("Heights.csv")
mpg
summary (my_data)
dim (my_data)
attributd(my_data)
attributes(my_data)
head (my_data)
tail (my_data)
mean (my_data$earn)
mean (my_data$height)
sd(my_data$height)
sd(my_data$earn)
var (my_data$height)
range(my_data$age)
IQR(my_data$age)
help(IQR)
cor (my_data$height, my_data$age)
range (my_data$age)
cor (my_data$height, my_data$age)
get wd()
getwd()
setwd/(Users/rendutczak/Desktop/)
setwd/(Users/rendutczak/Desktop/CS 453)
setwd("Users/rendutczak/Desktop/CS 453")
setwd("C:/Users/rendutczak/Desktop/CS 453")
getwd()
fm = read.cvs("cereal.cvs")
fm = read.csv("cereal.csv")
summary(my_data)
getwd ()
read.table
fm = read.csv ("cereal.csv")
my_data = read.csv ("cereal.csv")
summary (my_data)
help(read.spss)
attributes (my_data)
dim (my_data)
instances (my_data)
summary(my_data)
getwd()
fm = read.csv (cereal copy.csv)
fm = read.csv ("cereal copy.csv")
my_data = ("cereal copy.csv")
dim (my_data)
attributes (my_data)
summary (my_data)
ggplot (data = my_data)
ggplot (data = mpg)
plot (x, y, main = "Cereal")
counts <- table(cereal) barplot(counts, main="Cereal",xlab="Cereal Name", ylab="Type")
barplot(main="Cereal",xlab="Cereal Name", ylab="Type")
ggplot (data = diamonds) + geom_bar(mappins = aes(x = cut))
ggplot (data = diamonds) +geom_bar (mapping = aes (x = cut, y = ..prop.., group = 1))
mpg
library (cereal)
library (tidyverse)
install.packages ("tidyverse")
mpg
ggplot (data = diamonds) + geom_bar (mapping = aes (x = cut))
getwd()
fm = read.csv ("cereal.csv")
my+data = read.csv ("cereal.csv")
my_data = read.csv ("cereal.csv")
mpg
ggplot (data = <cereal>) + geom_bar (mapping = aes(x = cereal name))
ggplot (data = cereal) + geom_bar (mapping = aes(x = cereal name))
ggplot (data = cereal) + geom_bar (mapping = aes(x = name)
ggplot (data = cereal) + geom_bar (mapping = aes(x = name;mfr;type;calories;protein;fat;sodium;fiber;carbo;sugars;potass;vitamins;shelf;weight;cups;rating)
fm = read.csv ("cereal copy.csv")
my_data = read.csv ("ceral copy.csv")
my_data = read.csv ("cereal copy.csv")
dim (my_data)
attributes (my_data)
Cereal Copy.lm = lm(height ~cereal name, data=my_data)
cereal copy.lm = lm(height ~cereal name, data=my_data)
cerealcopy.lm = lm(height ~cereal name, data=my_data)
cerealcopy.lm = lm(height~cerealname, data=my_data)
barplot(data = diamonds) + geom_bar(mapping = aes (x = Cereal.name))
barplot(data = my_data + geom_bar(mapping = aes (x = Cereal.name))
cname <-c("100%_Bran", "100%_Natural_Bran","All-Bran", "All-Bran_with_Extra_Fiber", "Almond_Delight", "Apple_Cinnamon_Cheerios", "Apple_Jacks", "Basic_4", "Bran_Chex", "Bran_Flakes", "Cap'n'Crunch", "Cheerios", "Cinnamon_Toast_Crunch", "Clusters", "Cocoa_Puffs", "Corn_Chex", "Corn_Flakes", "Corn_Pops", "Count_Chocula", "Cracklin'_Oat_Bran", "Cream_of_Wheat_(Quick)", "Crispix", "Crispy_Wheat_&_Raisins", "Double_Chex" #
"Froot_Loops", "Frosted_Flakes", "Frosted_Mini-Wheats", "Fruitful_Bran", #
"Fruity_Pebbles", "Golden_Crisp", "Golden_Grahams", "Grape_Nuts_Flakes", #
"Grape-Nuts", "Great_Grains_Pecan", "Honey_Graham_Ohs", "Honey_Nut_Cheerios", #
"Honey-comb", "Just_Right_Crunchy__Nuggets", "Just_Right_Fruit_&_Nut", "Kix",#
"Life", "Lucky_Charms", "Maypo", "Mueslix_Crispy_Blend", "Multi-Grain_Cheerios",#
Nut&Honey_Crunch#
Nutri-Grain_Almond-Raisin#
Nutri-grain_Wheat#
Oatmeal_Raisin_Crisp#
Post_Nat._Raisin_Bran#
Product_19#
Puffed_Rice#
Puffed_Wheat#
Quaker_Oat_Squares#
Quaker_Oatmeal#
Raisin_Bran#
Raisin_Nut_Bran#
Raisin_Squares#
Rice_Chex#
Rice_Krispies#
Shredded_Wheat#
Shredded_Wheat_'n'Bran#
Shredded_Wheat_spoon_size#
Smacks#
Special_K#
Strawberry_Fruit_Wheats#
Total_Corn_Flakes#
Total_Raisin_Bran#
Total_Whole_Grain#
Triples#
Trix#
Wheat_Chex#
Wheaties#
Wheaties_Honey_Gold)
cname <-c("100%_Bran", "100%_Natural_Bran","All-Bran", "All-Bran_with_Extra_Fiber", "Almond_Delight", "Apple_Cinnamon_Cheerios", "Apple_Jacks", "Basic_4", "Bran_Chex", "Bran_Flakes", "Cap'n'Crunch", "Cheerios", "Cinnamon_Toast_Crunch", "Clusters", "Cocoa_Puffs", "Corn_Chex", "Corn_Flakes", "Corn_Pops", "Count_Chocula", "Cracklin'_Oat_Bran", "Cream_of_Wheat_(Quick)", "Crispix", "Crispy_Wheat_&_Raisins", "Double_Chex" #
"Froot_Loops", "Frosted_Flakes", "Frosted_Mini-Wheats", "Fruitful_Bran", #
"Fruity_Pebbles", "Golden_Crisp", "Golden_Grahams", "Grape_Nuts_Flakes", #
"Grape-Nuts", "Great_Grains_Pecan", "Honey_Graham_Ohs", "Honey_Nut_Cheerios", #
"Honey-comb", "Just_Right_Crunchy__Nuggets", "Just_Right_Fruit_&_Nut", "Kix",#
"Life", "Lucky_Charms", "Maypo", "Mueslix_Crispy_Blend", "Multi-Grain_Cheerios", "Nut&Honey_Crunch", "Nutri-Grain_Almond-Raisin", "Nutri-grain_Wheat", "Oatmeal_Raisin_Crisp", "Post_Nat._Raisin_Bran", "Product_19",#
"Puffed_Rice", "Puffed_Wheat", "Quaker_Oat_Squares", "Quaker_Oatmeal", #
"Raisin_Bran", "Raisin_Nut_Bran", "Raisin_Squares", "Rice_Chex", "Rice_Krispies", "Shredded_Wheat", "Shredded_Wheat_'n'Bran", "Shredded_Wheat_spoon_size", "Smacks", "Special_K", "Strawberry_Fruit_Wheats", #
"Total_Corn_Flakes", "Total_Raisin_Bran", "Total_Whole_Grain", "Triples", "Trix", "Wheat_Chex", "Wheaties", "Wheaties_Honey_Gold")
ggplot(data = cereal) + geom_bar (mapping = aes (x = cereal_name))
barplot(data = cereal) + geom_bar (mappng = aes(x = cereal.name))
barplot(data = diamonds) + geom_bar (mappng = aes(x = cereal.name))
barplot(data = my_data) + geom_bar (mappng = aes(x = cereal.name))
barplot(data = my_data) + geom_bar (mappng = aes(x = cereal.name, y = type))
mph
mpg
barplot(data = my_data) + geom_bar (mappng = aes(x = cereal.name, y = type))
summary (my_data)
ggplot (data = my_data, mapping aes(x = Cereal.name, y = Type))
ggplot (data = my_data) + geombar(mapping = aes (x = Cereal.Name, y = Type))
sd(my_data$calories)
sd(my_data$protein)
fm = read.csv  ("cereal copy.csv")
my_data = read.csv ("cereal copy.csv")
sd  (my_data$calories)
summary (my_data)
sd (my_data)
sd my(data$calories)
sd (my_data$calories)
sd (my_data$Calories)
sd (my_data$Fat)
sd (my_data$Protein)
sd (my_data$Sodium)
sd (my_data$Carbs)
sd (my_data$Sugars)
sd (my_data$Potassium)
sd (my_data$Vitamins.and.Minerals)
hist (my_data$Fat, breaks =5)
hist (my_data$Sugar, breaks =5)
hist (my_data$Protein, breaks =5)
hist (my_data$Fiber, breaks =5)
hist (my_data$Dietry.Fiber, breaks =5)
hist (my_data$Dietary.Fiber, breaks =5)
sfm = read.csv ("cereal copy.csv")
fm = read.csv ("cereal copy.csv")
my_data = read.csv ("crereal copy.csv")
my_data = read.csv ("cereal copy.csv")
cor (my_data$Fat, my_data$Carb)
cor (my_data$Fat, my_data$Carb, my_data$Sugars)
cor (my_data$Fat, my_data$Carb)
cor(my_data$Fat, my_data$Carb)
my_data = read.csv ("cereal copy.csv")
bar (my_data$Cerea.Name, my_data$Type)
bar (my_data$Cereal.Name, my_data$Type)
source("/Users/rendutczak/cereal copy.csv")
wd()
help(boxplot)
